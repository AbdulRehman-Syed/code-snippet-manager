(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class p{id;name;description;color;constructor(e,t,i="#3498db"){this.id=`category_${Date.now()}_${Math.floor(Math.random()*1e3)}`,this.name=e,this.description=t,this.color=i}updateCategory(e,t,i){e&&(this.name=e),t&&(this.description=t),i&&(this.color=i)}}function S({category:o,snippetCount:e}){return`
    <div class="category-card" style="border-left: 4px solid ${o.color}">
      <h3>${m(o.name)}</h3>
      <p>${m(o.description)}</p>
      <div class="category-stats">
        <span>${e} snippets</span>
      </div>
    </div>
  `}function m(o){const e=document.createElement("div");return e.textContent=o,e.innerHTML}function y(o){return o.toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"})}function w(o){return navigator.clipboard.writeText(o)}function C(o,e){const t={javascript:["function","const","let","var","if","else","return","for","while"],typescript:["interface","type","class","public","private","protected","extends","implements"],python:["def","class","import","from","return","if","else","elif","for","while"],java:["public","private","class","interface","extends","implements","return","if","else"]};let i=o;return(t[e]||[]).forEach(n=>{const r=new RegExp(`\\b(${n})\\b`,"g");i=i.replace(r,'<span class="keyword">$1</span>')}),i=i.replace(/(".*?"|'.*?')/g,'<span class="string">$1</span>'),e==="python"?i=i.replace(/(#.*)/g,'<span class="comment">$1</span>'):(i=i.replace(/(\/\/.*)/g,'<span class="comment">$1</span>'),i=i.replace(/(\/\*[\s\S]*?\*\/)/g,'<span class="comment">$1</span>')),i}function E({notification:o,onRemove:e}){const{id:t,message:i,type:s,timestamp:n}=o;return setTimeout(()=>{e(t)},3e3),`
    <div class="notification ${s}" data-id="${t}">
      <div class="notification-content">
        <p>${i}</p>
        <small>${y(n)}</small>
      </div>
      <button class="notification-close" data-id="${t}">&times;</button>
    </div>
  `}class l{id;title;code;language;category;tags;createdAt;updatedAt;constructor(e,t,i,s,n=[]){this.id=`snippet_${Date.now()}_${Math.floor(Math.random()*1e3)}`,this.title=e,this.code=t,this.language=i,this.category=s,this.tags=n,this.createdAt=new Date,this.updatedAt=new Date}updateSnippet(e,t,i,s,n){e&&(this.title=e),t&&(this.code=t),i&&(this.language=i),s&&(this.category=s),n&&(this.tags=n),this.updatedAt=new Date}addTag(e){this.tags.includes(e)||(this.tags.push(e),this.updatedAt=new Date)}removeTag(e){const t=this.tags.indexOf(e);t>-1&&(this.tags.splice(t,1),this.updatedAt=new Date)}}function b({snippet:o,category:e,onCopy:t,onDelete:i}){const s=e?.color||"#3498db";return`
    <div class="snippet-card" data-id="${o.id}">
      <div class="snippet-header">
        <h3>${g(o.title)}</h3>
        <div class="snippet-meta">
          <span class="language-badge ${o.language}">${o.language}</span>
          <span class="category-badge" style="background-color: ${s}">
            ${e?.name||o.category}
          </span>
        </div>
      </div>
      <pre class="snippet-code"><code>${C(g(o.code),o.language)}</code></pre>
      <div class="snippet-footer">
        <div class="tags">
          ${o.tags.map(n=>`<span class="tag">${g(n)}</span>`).join("")}
        </div>
        <div class="actions">
          <button class="btn small copy-btn" data-id="${o.id}">Copy</button>
          <button class="btn small delete-btn" data-id="${o.id}">Delete</button>
        </div>
      </div>
      <div class="snippet-date">
        Created: ${y(o.createdAt)}
      </div>
    </div>
  `}function g(o){const e=document.createElement("div");return e.textContent=o,e.innerHTML}class d{static SNIPPETS_KEY="code_snippets";static CATEGORIES_KEY="code_categories";static save(e,t){try{localStorage.setItem(e,JSON.stringify(t))}catch(i){console.error(`Error saving to localStorage: ${i}`)}}static load(e){try{const t=localStorage.getItem(e);return t?JSON.parse(t):[]}catch(t){return console.error(`Error loading from localStorage: ${t}`),[]}}static saveSnippets(e){this.save(this.SNIPPETS_KEY,e)}static loadSnippets(){return this.load(this.SNIPPETS_KEY)}static saveCategories(e){this.save(this.CATEGORIES_KEY,e)}static loadCategories(){return this.load(this.CATEGORIES_KEY)}static clearAll(){localStorage.removeItem(this.SNIPPETS_KEY),localStorage.removeItem(this.CATEGORIES_KEY)}}class L{snippets=[];categories=[];constructor(){console.log("SnippetService constructor called"),this.loadFromStorage(),console.log("SnippetService initialized with",this.snippets.length,"snippets")}loadFromStorage(){console.log("Loading from storage...");try{const e=d.loadSnippets();console.log("Loaded snippets from storage:",e.length),this.snippets=e.map(i=>{const s=new l(i.title,i.code,i.language,i.category,i.tags);return s.id=i.id,s.createdAt=new Date(i.createdAt),s.updatedAt=new Date(i.updatedAt),s});const t=d.loadCategories();console.log("Loaded categories from storage:",t.length),this.categories=t.map(i=>{const s=new p(i.name,i.description,i.color);return s.id=i.id,s}),console.log("Storage loading complete. Snippets:",this.snippets.length,"Categories:",this.categories.length)}catch(e){console.error("Error loading data from storage:",e),this.snippets=[],this.categories=[]}}saveToStorage(){console.log("Saving to storage. Snippets:",this.snippets.length,"Categories:",this.categories.length),d.saveSnippets(this.snippets),d.saveCategories(this.categories)}createSnippet(e,t,i,s,n=[]){console.log("Creating new snippet:",{title:e,language:i,category:s,tagsLength:n.length});const r=new l(e,t,i,s,n);return this.snippets.push(r),console.log("Snippet created with ID:",r.id,"Total snippets now:",this.snippets.length),this.saveToStorage(),r}getAllSnippets(){return console.log("Getting all snippets, count:",this.snippets.length),[...this.snippets]}getSnippetById(e){return this.snippets.find(t=>t.id===e)}updateSnippet(e,t,i,s,n,r){const a=this.getSnippetById(e);return a?(a.updateSnippet(t,i,s,n,r),this.saveToStorage(),!0):!1}deleteSnippet(e){const t=this.snippets.findIndex(i=>i.id===e);return t!==-1?(this.snippets.splice(t,1),this.saveToStorage(),!0):!1}searchSnippets(e){const t=e.toLowerCase();return this.snippets.filter(i=>i.title.toLowerCase().includes(t)||i.code.toLowerCase().includes(t)||i.tags.some(s=>s.toLowerCase().includes(t)))}filterByCategory(e){return this.snippets.filter(t=>t.category===e)}filterByLanguage(e){return this.snippets.filter(t=>t.language===e)}getAllTags(){const e=this.snippets.flatMap(t=>t.tags);return[...new Set(e)]}getSnippetsByTag(e){return this.snippets.filter(t=>t.tags.includes(e))}createCategory(e,t,i="#3498db"){const s=new p(e,t,i);return this.categories.push(s),this.saveToStorage(),s}getAllCategories(){return[...this.categories]}getCategoryById(e){return this.categories.find(t=>t.id===e)}updateCategory(e,t,i,s){const n=this.getCategoryById(e);return n?(n.updateCategory(t,i,s),this.saveToStorage(),!0):!1}deleteCategory(e){const t=this.categories.findIndex(i=>i.id===e);return t!==-1?(this.categories.splice(t,1),this.saveToStorage(),!0):!1}getSnippetCountByCategory(){const e={};return this.snippets.forEach(t=>{e[t.category]=(e[t.category]||0)+1}),e}exportData(){return JSON.stringify({snippets:this.snippets,categories:this.categories},null,2)}importData(e){try{const t=JSON.parse(e);return t.snippets&&t.categories?(this.snippets=t.snippets.map(i=>{const s=new l(i.title,i.code,i.language,i.category,i.tags);return s.id=i.id,s.createdAt=new Date(i.createdAt),s.updatedAt=new Date(i.updatedAt),s}),this.categories=t.categories.map(i=>{const s=new p(i.name,i.description,i.color);return s.id=i.id,s}),this.saveToStorage(),!0):!1}catch(t){return console.error("Error importing ",t),!1}}}class A{snippetService;state;notifications=[];constructor(){this.snippetService=new L,this.state={currentView:"snippets",searchQuery:"",notifications:[]},this.init()}init(){this.snippetService.getAllCategories().length===0&&(this.snippetService.createCategory("JavaScript","JavaScript code snippets","#f1c40f"),this.snippetService.createCategory("TypeScript","TypeScript code snippets","#2980b9"),this.snippetService.createCategory("Python","Python code snippets","#3498db"),this.snippetService.createCategory("HTML/CSS","Frontend code snippets","#e74c3c"),this.snippetService.createCategory("Utilities","Utility functions and helpers","#2ecc71")),this.setupEventListeners(),this.setupFormSubmission(),this.render()}setupFormSubmission(){const e=document.getElementById("snippet-form");e&&e.addEventListener("submit",t=>{t.preventDefault(),this.handleCreateSnippet(t)})}setupEventListeners(){document.addEventListener("click",i=>{const s=i.target;if(s.matches("#snippets-btn")?this.switchView("snippets"):s.matches("#categories-btn")?this.switchView("categories"):s.matches("#create-btn")&&this.switchView("create"),s.matches(".copy-btn")){const n=s.getAttribute("data-id");if(n){const r=this.snippetService.getSnippetById(n);r&&w(r.code).then(()=>this.addNotification("Code copied to clipboard!","success")).catch(()=>this.addNotification("Failed to copy code","error"))}}if(s.matches(".delete-btn")){const n=s.getAttribute("data-id");n&&confirm("Are you sure you want to delete this snippet?")&&(this.snippetService.deleteSnippet(n),this.renderSnippets(),this.addNotification("Snippet deleted successfully","success"))}if(s.matches("#export-btn")&&this.handleExport(),s.matches("#import-btn")&&document.getElementById("import-file")?.click(),s.matches(".notification-close")){const n=s.getAttribute("data-id");n&&this.removeNotification(n)}s.matches("#create-first-btn")&&this.switchView("create")}),document.getElementById("search-input")?.addEventListener("input",i=>{const s=i.target;this.state.searchQuery=s.value,this.renderSnippets()}),document.getElementById("import-file")?.addEventListener("change",i=>{this.handleImport(i)})}switchView(e){this.state.currentView=e,this.render()}render(){this.updateActiveNav();const e=document.getElementById("snippets-view"),t=document.getElementById("categories-view"),i=document.getElementById("create-view");switch(e?.classList.add("hidden"),t?.classList.add("hidden"),i?.classList.add("hidden"),this.state.currentView){case"snippets":e?.classList.remove("hidden"),this.renderSnippets();break;case"categories":t?.classList.remove("hidden"),this.renderCategories();break;case"create":i?.classList.remove("hidden");break}this.renderNotifications()}updateActiveNav(){document.querySelectorAll(".nav-btn").forEach(t=>{t.classList.remove("active")}),document.getElementById(`${this.state.currentView}-btn`)?.classList.add("active")}renderSnippets(){const e=document.getElementById("snippets-container");if(!e)return;let t;if(this.state.searchQuery.trim()?t=this.snippetService.searchSnippets(this.state.searchQuery):t=this.snippetService.getAllSnippets(),t.length===0){e.innerHTML=`
        <div class="empty-state">
          <h3>No snippets found</h3>
          <p>${this.state.searchQuery?"Try a different search term":"Create your first code snippet to get started!"}</p>
          ${this.state.searchQuery?"":'<button id="create-first-btn" class="btn primary">Create Snippet</button>'}
        </div>
      `;return}const i=this.snippetService.getAllCategories(),s=new Map(i.map(n=>[n.id,n]));e.innerHTML=t.map(n=>b({snippet:n,category:s.get(n.category),onCopy:()=>{},onDelete:()=>{}})).join("")}renderCategories(){const e=document.getElementById("categories-container");if(!e)return;const t=this.snippetService.getAllCategories(),i=this.snippetService.getSnippetCountByCategory();if(t.length===0){e.innerHTML=`
        <div class="empty-state">
          <h3>No categories found</h3>
          <p>Create categories to organize your snippets!</p>
        </div>
      `;return}e.innerHTML=`
      <div class="categories-grid">
        ${t.map(s=>S({category:s,snippetCount:i[s.id]||0})).join("")}
      </div>
    `}handleCreateSnippet(e){e.preventDefault();const t=e.target,i=t.tagName==="FORM"?t:t.closest("form");if(!i){this.addNotification("Form not found","error");return}const s=new FormData(i),n=s.get("title"),r=s.get("code"),a=s.get("language"),u=s.get("category"),f=s.get("tags"),v=f?f.split(",").map(c=>c.trim()).filter(c=>c):[];if(!n||!r||!a||!u){this.addNotification("Please fill in all required fields","error");return}try{this.snippetService.createSnippet(n,r,a,u,v),this.addNotification("Snippet created successfully!","success"),i.reset(),this.switchView("snippets")}catch{this.addNotification("Failed to create snippet","error")}}handleExport(){const e=this.snippetService.exportData(),t=new Blob([e],{type:"application/json"}),i=URL.createObjectURL(t),s=document.createElement("a");s.href=i,s.download=`code-snippets-${new Date().toISOString().slice(0,10)}.json`,document.body.appendChild(s),s.click(),setTimeout(()=>{document.body.removeChild(s),URL.revokeObjectURL(i)},100),this.addNotification("Data exported successfully!","success")}handleImport(e){const t=e.target,i=t.files?.[0];if(!i)return;const s=new FileReader;s.onload=n=>{try{const r=n.target?.result;this.snippetService.importData(r)?(this.addNotification("Data imported successfully!","success"),this.renderSnippets(),this.renderCategories()):this.addNotification("Invalid data format","error")}catch{this.addNotification("Failed to import data","error")}},s.readAsText(i),t.value=""}addNotification(e,t="info"){const i={id:`notification_${Date.now()}`,message:e,type:t,timestamp:new Date};this.notifications.push(i),this.renderNotifications()}removeNotification(e){this.notifications=this.notifications.filter(t=>t.id!==e),this.renderNotifications()}renderNotifications(){const e=document.getElementById("notifications-container");if(e){if(this.notifications.length===0){e.innerHTML="";return}e.innerHTML=this.notifications.map(t=>E({notification:t,onRemove:i=>this.removeNotification(i)})).join("")}}}console.log("main.ts loaded");function h(){if(console.log("Attempting to initialize app"),typeof document>"u"){console.log("Not in browser environment");return}["snippets-container","categories-container","notifications-container"].every(t=>{const i=document.getElementById(t)!==null;return console.log(`Element ${t} exists: ${i}`),i})?(console.log("All required elements found, initializing App"),new A):(console.warn("Required DOM elements not found. Retrying in 100ms..."),setTimeout(h,100))}document.readyState==="loading"?(console.log("DOM still loading, waiting for DOMContentLoaded"),document.addEventListener("DOMContentLoaded",h)):(console.log("DOM already loaded, initializing immediately"),h());
//# sourceMappingURL=index-BqYgAdlW.js.map
